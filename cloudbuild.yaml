steps:
  # run from the start
  # this will decrypt the encrypted file and secret
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud secrets versions access latest --project=${_PROJECT_ID} --secret=${_ENV}-${_SECRET_NAME} --format='get(payload.data)' | tr '_-' '/+' | base64 -d > .env
    id: "prepare-secret"
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      ["build", "-t", "gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${SHORT_SHA}", "."]
    id: Building the container image
  # Push the container image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${SHORT_SHA}"]
    id: Pushing the image to registry
  # Deploy container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "run",
        "deploy",
        "${_SERVICE_NAME}",
        "--image",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${SHORT_SHA}",
        "--region",
        "us-central1",
        "--platform",
        "managed",
        "--allow-unauthenticated",
        --add-cloudsql-instances,
        ${_INSTANCE_CONNECTION_NAME}
      ]
substitutions:
  _ENV: dev
  _SECRET_NAME: my-project-tho
  _PROJECT_ID: azoom-n-d-phong
  _SERVICE_NAME: deploy-my-project-tho
  _APP_DOCKER_FILE: ./Dockerfile
  _CLOUD_RUN_SERVICE_NAME: deploy-my-project-tho
  _INSTANCE_CONNECTION_NAME: azoom-n-d-phong:northamerica-northeast1:test-pool-connection
timeout: 900s
