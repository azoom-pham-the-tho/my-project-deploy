steps:
  # run from the start
  # this will decrypt the encrypted file and secret
  - id: "prepare-secret"
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud secrets versions access latest --project=${_PROJECT_ID} --secret=${_ENV}-${_SECRET_NAME} --format='get(payload.data)' | tr '_-' '/+' | base64 -d > ${_DECRYPTED_ENV_FILE_LOCATION}
  # this builds app docker image
  - id: "build-app-image"
    name: "gcr.io/cloud-builders/docker"
    waitFor: ["prepare-secret"]
    args:
      - --dockerfile=${_APP_DOCKER_FILE}
      - --destination=gcr.io/${_PROJECT_ID}/${_CLOUD_RUN_SERVICE_NAME}:latest
      - --destination=gcr.io/${_PROJECT_ID}/${_CLOUD_RUN_SERVICE_NAME}:$TAG_NAME
      - --cache=true
      - --cache-ttl=336h

  # deploy container image to Cloud Run
  - id: "deploy-app"
    name: "gcr.io/cloud-builders/gcloud"
    waitFor: ["build-app-image"]
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud run deploy ${_CLOUD_RUN_SERVICE_NAME} \
          --image gcr.io/$_PROJECT_ID/${_CLOUD_RUN_SERVICE_NAME}:$TAG_NAME \
          --allow-unauthenticated \
          --region asia-northeast1 \
          --platform managed \
substitutions:
  _ENV: dev
  _SECRET_NAME: my-project-tho
  _PROJECT_ID: azoom-n-d-phong
  _DECRYPTED_ENV_FILE_LOCATION: ./.env
  _APP_DOCKER_FILE: ./Dockerfile
  _CLOUD_RUN_SERVICE_NAME: deploy-my-project-tho
timeout: 900s
